package com.ericsson.fdp.business.enums;

/**
 * The Enum Function.
 * 
 * @author Ericsson
 */
public enum Function {

	/** The function corresponding to current timestamp. */
	NOW("TODAY+0"),

	/** The vendorid serviceid. */
	VENDORID_SERVICEID("VendorId_ServiceId"),

	/** The product charging value. */
	PRODUCT_CHARGING_VALUE("PRODUCT_CHARGING_VALUE"),

	/** The product charging value dec. */
	PRODUCT_CHARGING_VALUE_DEC("PRODUCT_CHARGING_VALUE_DEC"),

	/** The product charging value for external data 2. */
	PRODUCT_CHARGING_VALUE_DEC_EXTDATA2("PRODUCT_CHARGING_VALUE_DEC_EXTDATA2"),

	/** The REFILLI d_3 g. */
	REFILLID_3G("REFILLID_3G"),

	/** The VOUCHERI d_3 g. */
	VOUCHERID_3G("VOUCHERID_3G"),

	/** The REFILLI d_2 g. */
	REFILLID_2G("REFILLID_2G"),

	/** The VOUCHERI d_2 g. */
	VOUCHERID_2G("VOUCHERID_2G"),

	/** The mcarbon value. */
	MCARBON_VALUE("MCARBON_VALUE"),

	RENEWAL_COUNT("RENEWAL_COUNT"),

	ORIGIN_HOST_NAME("ORIGIN_HOST_NAME"),

	/** The GET_MANHATTAN_CIRCLEID */
	GET_MANHATTAN_CIRCLEID("GET_MANHATTAN_CIRCLEID"),

	/** The GET_SYSTEM_IP */
	GET_SYSTEM_IP("GET_SYSTEM_IP"),

	/** External Data value for Absolute Amnt */
	EXTERNAL_DATA_ABSAMT("EXTERNAL_DATA_ABSAMT"),

	/** External Data value for Percentage Amnt */
	EXTERNAL_DATA_PERCAMT("EXTERNAL_DATA_PERCAMT"),

	/** External Data field to inform CS about the purchase through Loan */
	EXTERNAL_DATA_LOAN_PURCHASE_INFO("EXTERNAL_DATA_LOAN_PURCHASE_INFO"),

	/** FOR USER CIRCLE CODE */
	SUBSCRIBER_CIRCLE_CODE("SUBSCRIBER_CIRCLE_CODE"),

	/** GET_FDP_CIRCLE_CODE **/
	GET_CIS_CIRCLE_CODE("GET_CIS_CIRCLE_CODE"),

	/** GET_FDP_PRODUCT_CODE **/
	GET_CIS_PRODUCT_CODE("GET_CIS_PRODUCT_CODE"),

	SERVICE_ID_EMA("SERVICE_ID_EMA"),

	PROVISION_ACTION_EMA("PROVISION_ACTION_EMA"),

	GET_CIS_EXPIRE_DATE("GET_CIS_EXPIRE_DATE"),

	GET_CIS_PRODUCT_TYPE("GET_CIS_PRODUCT_TYPE"),

	GET_CIS_PRODUCT_EXPIRY("GET_CIS_PRODUCT_EXPIRY"),

	GET_CIS_PROVISION_TYPE("GET_CIS_PROVISION_TYPE"),

	GET_CIS_SERVICE_NAME("GET_CIS_SERVICE_NAME"),

	PROVIDER_FRI_NUMBER("PROVIDER_FRI_NUMBER"),

	GET_PRODUCT_DESCRIPTION("GET_PRODUCT_DESCRIPTION"),

	GET_EXPIRY_BITS("GET_EXPIRY_BITS"),

	RENEWAL_VALUE("RENEWAL_VALUE"),

	IS_SPLIT("IS_SPLIT"),

	RECURRING_GRACE_PERIOD("RECURRING_GRACE_PERIOD"),

	RETRY_LIMIT("RETRY_LIMIT"),

	EXPIRY_NOTIFICATION_FLAG("EXPIRY_NOTIFICATION_FLAG"),

	SUBSCRIBER_FRI_NUMBER("SUBSCRIBER_FRI_NUMBER"),

	PAYSRC("PAY_SRC"),

	BEN_MSISDN("BEN_MSISDN"),

	SEND_SMS("SEND_SMS"),

	SPLIT_NO("SPLIT_NO"),

	PRODUCT_COST("PRODUCT_COST"),

	ACTION("ACTION"),

	PAM_ID("PAM_ID"),

	MM_TRANSACTION_ID("MM_TRANSACTION_ID"),

	RIMSUB_HLR_ID("RIMSUB_HLR_ID"),

	BEN_MSISDN_EMA("BEN_MSISDN_EMA"),

	EVDS_TRANS_TYPE_ID("EVDS_TRANS_ID"),

	EVDS_COMMENTS("EVDS_COMMENTS"),

	PRODUCTID("PRODUCTID"),

	PAM_ERROR_MSG("PAM_ERROR_MSG"),

	SRC_CHANNEL("SRC_CHANNEL"),

	GET_SRC_PAY_CHL("GET_SRC_PAY_CHL"),

	BALANCE_CHECK("BALANCE_CHECK"),

	PCRF_TRANSACTIONID("PCRF_TRANSACTIONID"),

	PCRF_START_DATE("PCRF_START_DATE"),

	PCRF_END_DATE("PCRF_END_DATE"),

	FAF_NUMBER("FAF_NUMBER"),

	FAF_CHARGING_INDICATOR("FAF_CHARGING_INDICATOR"),

	INTERNATIONAL("INTERNATIONAL"),

	ONNET("ONNET"),

	OFFNET("OFFNET"),

	ME2U_MAIN2DEBIT_AMT("ME2U_MAIN2DEBIT_AMT"),
	
	ME2U_MAIN2DEBIT_AMT_TRANS("ME2U_MAIN2DEBIT_AMT_TRANS"),
		
	ME2U_DA2DEBIT_ID("ME2U_DA2DEBIT_ID"),
		
	ME2U_DA2DEBIT_AMT("ME2U_DA2DEBIT_AMT"),
	
	ME2U_DA2DEBIT_AMT_TRANS("ME2U_DA2DEBIT_AMT_TRANS"),
	
	ME2U_MAIN2CREDIT_AMT("ME2U_MAIN2CREDIT_AMT"),
	
	ME2U_MAIN2CREDIT_AMT_TRANS("ME2U_MAIN2CREDIT_AMT_TRANS"),
	
	ME2U_DA2CREDIT_ID("ME2U_DA2CREDIT_ID"),
		
	ME2U_DA2CREDIT_AMT("ME2U_DA2CREDIT_AMT"),
	
	ME2U_DA2CREDIT_AMT_TRANS("ME2U_DA2CREDIT_AMT_TRANS"),
	
	ME2U_AMT2TRANSFER("ME2U_AMT2TRANSFER"),
	
	ME2U_AMT2TRANSFER_IN_KWACHA("ME2U_AMT2TRANSFER_IN_KWACHA"),
	
	ME2U_AMTTRANSFER_DATA2SHARE("ME2U_AMTTRANSFER_DATA2SHARE"),
	
	PAM_ID_ZM("PAM_ID_ZM"),
	
	OFFER_ID_ZM("OFFER_ID_ZM"), 
	
	FAF_OFFER_ID("FAF_OFFER_ID"),
	
	FAF_MSISDN_ADD("FAF_MSISDN_ADD"),
	
	FAF_MSISDN_MODIFY_DELETE("FAF_MSISDN_MODIFY_DELETE"),
	
	BUNDLE_NAME("BUNDLE_NAME"),
	
	PRODUCT_CATEGORY("PRODUCT_CATEGORY"),
	
	USAGE_PERIOD("USAGE_PERIOD"),
	
	GET_FAF_LIST("GET_FAF_LIST"),
	
	SUBSCRIBER_NUMBER("SUBSCRIBER_NUMBER"),
	
	GET_DATA2SHARE_EXPIRY("GET_DATA2SHARE_EXPIRY"),
	
	Get_DATA_AMT("Get_DATA_AMT"),
	
	GET_RECEIVER_NUMBER("GET_RECEIVER_NUMBER"),
	
	BONUS_DATA_MB("BONUS_DATA_MB"),

	GET_SENDER_NUMBER("GET_SENDER_NUMBER"),
	
	/** GET_HANDSET_BASED_OFFER_ID **/
	GET_HANDSET_BASED_OFFER_ID("GET_HANDSET_BASED_OFFER_ID"),
	
	/** MATCH_HANDSET_OFFERS **/	
	MATCH_HANDSET_OFFERS("MATCH_HANDSET_OFFERS"),
	
	CHECK_4G_HANDSET("CHECK_4G_HANDSET"),
	
	GET_BENEFICIARY_MSISDN("GET_BENEFICIARY_MSISDN"),

	GET_SUBSCRIBER_FRI_NUMBER("GET_SUBSCRIBER_FRI_NUMBER"),

	GET_ORIGIN_OPERATOR_ID("GET_ORIGIN_OPERATOR_ID"),
	
	FROM_DATE_MAGIC_NUMBER("FROM_DATE_MAGIC_NUMBER"),
	
	TO_DATE_MAGIC_NUMBER("TO_DATE_MAGIC_NUMBER"),
	
	SIM_LANGUAGE_ID("SIM_LANGUAGE_ID"),
	
	CHARGE_AMOUNT("CHARGE_AMOUNT"),
	
	RENEWAL_DATE("RENEWAL_DATE"),

	/** GET_FDP_CIRCLE_CODE **/
	GET_FDP_CIRCLE_CODE("GET_FDP_CIRCLE_CODE"),
	
	/** GET_SBB_DEL_ALLOWED **/
	GET_SBB_DEL_ALLOWED("GET_SBB_DEL_ALLOWED"),
	
	/** GET_SBB_ACTION **/
	GET_SBB_ACTION("GET_SBB_ACTION"),
	
	/** GET_CIS_ACTION_TYPE **/
	GET_CIS_ACTION_TYPE("GET_CIS_ACTION_TYPE"), 
	
	/** GET_HANDSET_ATTRIBUTE_NAME **/
	GET_HANDSET_ATTRIBUTE_NAME("GET_HANDSET_ATTRIBUTE_NAME"),
	
	/** GET_HANDSET_ATTRIBUTE_NAME **/
	GET_HANDSET_ATTRIBUTE_VALUE("GET_HANDSET_ATTRIBUTE_VALUE"), 
	
	/** GET_DA_START_DATE **/
	GET_DA_START_DATE("GET_DA_START_DATE"), 
	
	/** GET_DA_EXPIRY_DATE **/
	GET_DA_EXPIRY_DATE("GET_DA_EXPIRY_DATE"), 
	
	/** GET_OFFER_START_DATE **/
	GET_OFFER_START_DATE("GET_OFFER_START_DATE"), 
	
	/** GET_OFFER_EXPIRY_DATE **/
	GET_OFFER_EXPIRY_DATE("GET_OFFER_EXPIRY_DATE"),
	
	/** GET_CUMULATIVE_PRODUCT_ID **/
	GET_CIS_CUM_PRODUCT_CODE("GET_CIS_CUM_PRODUCT_CODE"),
	
	/** GET CUMULATIVE PRODUCT EXPIRY **/
	GET_CIS_CUM_PRODUCT_EXPIRY("GET_CIS_CUM_PRODUCT_EXPIRY"),
	
	/** OPTIN_OPTOUT_ACTION **/
	OPTIN_OPTOUT_ACTION("OPTIN_OPTOUT_ACTION"),
	
	/** VALIDATE_DATE **/
	VALIDATE_DATE("VALIDATE_DATE"),
	
	WITH_CC_ADD_MAGICNO("WITH_CC_ADD_MAGICNO"),
	
	WITHOUT_CC_ADD_MAGICNO("WITHOUT_CC_ADD_MAGICNO"),
	
	WITH_ZERO_ADD_MAGICNO("WITH_ZERO_ADD_MAGICNO"),
		
	ACTIVATION_START_DATE("ACTIVATION_START_DATE"),
	

	ACTIVATION_END_DATE("ACTIVATION_END_DATE"),
	
	/** LOYALTY_ITEM_CODE **/
	LOYALTY_ITEM_CODE("LOYALTY_ITEM_CODE"),
	
	/** LOYALTY_POINTS **/
	LOYALTY_POINTS("LOYALTY_POINTS"),

    ORIGIN_OPERATOR_ID("ORIGIN_OPERATOR_ID"),

	/** MSISDN_WITHOUT_COUNTRY_CODE **/
	MSISDN_WITHOUT_COUNTRY_CODE("MSISDN_WITHOUT_COUNTRY_CODE"),

	CHECK_4G_HANDSET_MODEL("CHECK_4G_HANDSET_MODEL"),
	
	CHECK_FREQUENCY_SUPPORT("CHECK_FREQUENCY_SUPPORT"),
	
	BUNDLE_FLAG("BUNDLE_FLAG"),
	
	GET_CIS_EXPIRY_ONE_DAY_MINUS("GET_CIS_EXPIRY_ONE_DAY_MINUS"),
	
	GET_CIS_PRODUCT_NAME("GET_CIS_PRODUCT_NAME"),
	
	VIEW_PRODUCT_TYPE("VIEW_PRODUCT_TYPE"),
	
	GET_PIN("GET_PIN"),
	
	/** This function would return USSD short code or 3PP channel */
	SHORT_CODE_OR_CHANNEL("SHORT_CODE_OR_CHANNEL")
	;

   
	/**
	 * The function name.
	 */
	private String functionName;

	/**
	 * The constructor for the enum function.
	 * 
	 * @param functionNameToSet
	 *            The function name to set.
	 */
	private Function(final String functionNameToSet) {
		this.functionName = functionNameToSet;
	}

	/**
	 * Gets the function name.
	 * 
	 * @return the function name.
	 */
	public String getFunctionName() {
		return functionName;
	}

	/**
	 * This method is used to get the function from the function name.
	 * 
	 * @param functionName
	 *            the function name.
	 * @return The function.
	 */
	public static Function getFunction(final String functionName) {
		for (final Function function : Function.values()) {
			if (function.functionName.equalsIgnoreCase(functionName)) {
				return function;
			}
		}
		return null;
	}
}
