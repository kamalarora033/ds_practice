
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>


	<parent>
		<groupId>com.ericsson.fdp</groupId>
		<artifactId>fdp</artifactId>
		<version>1.0</version>
	</parent>
	<artifactId>fdpBusiness</artifactId>
	<packaging>ejb</packaging>

	<name>FDP-Business EJB module</name>

	<dependencies>

		<!-- Declare the APIs we depend on and need for compilation. All of them 
			are provided by JBoss AS 7 -->

		 

		<!-- Import the EJB API, we use provided scope as the API is included in 
			JBoss AS 7 -->
		<dependency>
			<groupId>org.jboss.spec.javax.ejb</groupId>
			<artifactId>jboss-ejb-api_3.1_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the CDI API, we use provided scope as the API is included in 
			JBoss AS 7 -->
		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the JPA API, we use provided scope as the API is included in 
			JBoss AS 7 -->
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.0-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- JSR-303 (Bean Validation) Implementation -->
		<!-- Provides portable constraints such as @Email -->
		<!-- Hibernate Validator is shipped in JBoss AS 7 -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Test scope dependencies -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
		
		<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>2.0.5-beta</version>
			</dependency>
			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-api-mockito</artifactId>
				<version>1.6.2</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-module-junit4</artifactId>
				<version>1.6.2</version>
				<scope>test</scope>
			</dependency>
			
	 
					
		
		<dependency>
			<groupId>com.ericsson.fdp</groupId>
			<artifactId>fdpCoreServices</artifactId>
			<type>ejb</type>
			<exclusions>
				<exclusion>
					<artifactId>slf4j-log4j12</artifactId>
					<groupId>org.slf4j</groupId>
				</exclusion>
				<exclusion>
					<artifactId>log4j</artifactId>
					<groupId>log4j</groupId>
				</exclusion>
				<exclusion>
					<artifactId>jgroups</artifactId>
					<groupId>org.jgroups</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-all</artifactId>
			<scope>provided</scope>
		</dependency>


		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<scope>provided</scope>
		</dependency>


		<dependency>
			<groupId>commons-net</groupId>
			<artifactId>commons-net</artifactId>
			<version>3.3</version>
		</dependency>

		<dependency>
			<groupId>org.jboss.ejb3</groupId>
			<artifactId>jboss-ejb3-ext-api</artifactId>
			<version>2.1.0</version>
		</dependency>

		<dependency>
			<groupId>uk.com.robust-it</groupId>
			<artifactId>cloning</artifactId>
			<version>1.9.2</version>
		</dependency>


		<!-- Start -->
		<!-- <dependency> <groupId>org.apache.deltaspike.cdictrl</groupId> <artifactId>deltaspike-cdictrl-weld</artifactId> 
			<version>0.4-SNAPSHOT</version> <scope>runtime</scope> </dependency> <dependency> 
			<groupId>org.apache.deltaspike.core</groupId> <artifactId>deltaspike-core-api</artifactId> 
			<version>0.4-SNAPSHOT</version> </dependency> <dependency> <groupId>org.apache.deltaspike.core</groupId> 
			<artifactId>deltaspike-core-impl</artifactId> <version>0.4-SNAPSHOT</version> 
			<scope>runtime</scope> </dependency> <dependency> <groupId>org.jboss.weld.se</groupId> 
			<artifactId>weld-se</artifactId> <version>1.1.9.Final</version> <scope>runtime</scope> 
			</dependency> -->

		<!-- End -->

		<!-- Optional, but highly recommended -->
		<!-- Arquillian allows you to test enterprise code such as EJBs and Transactional(JTA) 
			JPA from JUnit/TestNG -->

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.2.3</version>
		</dependency>

		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20140107</version>
		</dependency>


		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-jaxrs</artifactId>
			<version>1.9.12</version>
		</dependency>


		<dependency>
			<groupId>org.jboss.arquillian.junit</groupId>
			<artifactId>arquillian-junit-container</artifactId>
			<version>1.0.0.CR4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- <dependency> <groupId>org.jboss.as</groupId> <artifactId>jboss-as-clustering-singleton</artifactId> 
			<version>${version.jboss.as}</version> <exclusions> <exclusion> <artifactId>netty</artifactId> 
			<groupId>org.jboss.netty</groupId> </exclusion> <exclusion> <artifactId>infinispan-cachestore-jdbc</artifactId> 
			<groupId>org.infinispan</groupId> </exclusion> <exclusion> <artifactId> infinispan-cachestore-remote 
			</artifactId> <groupId>org.infinispan</groupId> </exclusion> <exclusion> 
			<artifactId>infinispan-client-hotrod</artifactId> <groupId>org.infinispan</groupId> 
			</exclusion> </exclusions> </dependency> -->

		<dependency>
			<groupId>org.jboss.as</groupId>
			<artifactId>jboss-as-clustering-singleton</artifactId>
			<version>${version.jboss.as}</version>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<artifactId>jgroups</artifactId>
					<groupId>org.jgroups</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- The client needs JBoss remoting to access the server -->
		<dependency>
			<groupId>org.jboss.remoting3</groupId>
			<artifactId>jboss-remoting</artifactId>
			<version>${jboss.remoting.version}</version>
			<scope>runtime</scope>
		</dependency>

		<!-- Remote EJB accesses can be secured -->
		<dependency>
			<groupId>org.jboss.sasl</groupId>
			<artifactId>jboss-sasl</artifactId>
			<scope>runtime</scope>
			<version>${jboss.sasl.version}</version>
		</dependency>

		<!-- data serialization for invoking remote EJBs -->
		<dependency>
			<groupId>org.jboss.marshalling</groupId>
			<artifactId>jboss-marshalling-river</artifactId>
			<scope>runtime</scope>
			<version>${jboss.marshaller.version}</version>
		</dependency>
		<!--  Apache common jar for telnet client -->
		<dependency>
    		<groupId>commons-net</groupId>
    		<artifactId>commons-net</artifactId>
    		<version>3.3</version>
		</dependency>

		<dependency>
			<groupId>commons-validator</groupId>
			<artifactId>commons-validator</artifactId>
			<version>1.6</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-ejb-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<archive>
						<addMavenDescriptor>false</addMavenDescriptor>
						<manifestEntries>
							<Dependencies><!-- org.jboss, -->
								org.jboss.msc,
								org.jboss.as.clustering.singleton,
								org.jboss.as.server
							</Dependencies>
						</manifestEntries>
					</archive>
					<!-- Tell Maven we are using EJB 3.1 -->
					<ejbVersion>3.1</ejbVersion>
					<generateClient>true</generateClient>
					<clientIncludes>
						<clientInclude>**/service/*.class</clientInclude>
						<clientInclude>**/constants/*.class</clientInclude>
						<clientInclude>**/ReportGenerationConstant.class</clientInclude>
						<clientInclude>**/CSVFileDTO.class</clientInclude>
						<clientInclude>**/CSVFileDataDTO.class</clientInclude>

						<clientInclude>**/ImportSharedAccountFile.class</clientInclude>
						<clientInclude>**/ImportFileRequest.class</clientInclude>
						<clientInclude>**/ImportFileRequestImpl.class</clientInclude>
						<clientInclude>**/ImportFileResponse.class</clientInclude>
						<clientInclude>**/ImportFileResponseImpl.class</clientInclude>
						<clientInclude>**/Status.class</clientInclude>

						<clientInclude>**/CommandParam.class</clientInclude>
						<clientInclude>**/RequestUtil.class</clientInclude>
						<clientInclude>**/exception/*.class</clientInclude>
						<clientInclude>**/ApplicationConfigUtil.class</clientInclude>

						<clientInclude>**/FDPRequest.class</clientInclude>
						<clientInclude>**/business/command/**</clientInclude>
						<clientInclude>**/business/request/*.class</clientInclude>
						<clientInclude>**/business/decorator/*.class</clientInclude>
						<clientInclude>**/business/FDPExecutable.class</clientInclude>
						<clientInclude>**/business/dto/ResponseDTO.class</clientInclude>
						<clientInclude>**/business/enums/ResponseType.class</clientInclude>
						<clientInclude>**/business/batchjob/emabatch/EMABatchService.class</clientInclude>
						<clientInclude>**/business/tariffenquiry/configimport/ImportTariffEnquiryAttributeFile.class</clientInclude>
						<clientInclude>**/dto/icrsubscribersimport/ICRSubscribersCSVData.class</clientInclude>
						<clientInclude>**/dto/pam/*.class</clientInclude>
						<clientInclude>**/business/batchjob/productconfigurationsexport/ProductConfigurationsExportService.class</clientInclude>
						<clientInclude>**/business/request/impl/ImportTariffAttributeFileRequestImpl.class</clientInclude>
						<clientInclude>**/business/tariffenquiry/configimport/constants/TariffConstants.class</clientInclude>

						<clientInclude>**/business/sharedaccount/ActiveAccountService.class</clientInclude>
						<clientInclude>**/business/step/execution/impl/rsdeprovision/*</clientInclude>
						<clientInclude>**/business/request/impl/FDPRequestImpl.class</clientInclude>
						<clientInclude>**/business/vo/FDPActiveServicesVO.class</clientInclude>
						<clientInclude>**/business/product/Product.class</clientInclude>
						<clientInclude>**/business/recurringservice/*.class</clientInclude>

						<clientInclude>**/business/cache/datageneration/service/*.class</clientInclude>
						<clientInclude>**/business/cache/*.class</clientInclude>

					</clientIncludes>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<!-- The default profile skips all tests, though you can tune it to run 
				just unit tests based on a custom pattern -->
			<!-- Seperate profiles are provided for running all tests, including Arquillian 
				tests that execute in the specified container -->
			<id>default</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>2.4.3</version>
						<configuration>
							 <parallel>methods</parallel>
							  <threadCount>100</threadCount>  
								
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<!-- We add the JBoss repository as we need the JBoss AS connectors for 
				Arquillian -->
			<repositories>
				<!-- The JBoss Community public repository is a composite repository 
					of several major repositories -->
				<!-- see http://community.jboss.org/wiki/MavenGettingStarted-Users -->
				<repository>
					<id>jboss-public-repository</id>
					<name>JBoss Repository</name>
					<url>http://repository.jboss.org/nexus/content/groups/public</url>
					<!-- These optional flags are designed to speed up your builds by reducing 
						remote server calls -->
					<releases>
						<enabled>true</enabled>
					</releases>
					<snapshots>
						<enabled>false</enabled>
					</snapshots>
				</repository>
			</repositories>

			<pluginRepositories>
				<pluginRepository>
					<id>jboss-public-repository</id>
					<name>JBoss Repository</name>
					<url>http://repository.jboss.org/nexus/content/groups/public</url>
					<releases>
						<enabled>true</enabled>
					</releases>
					<snapshots>
						<enabled>false</enabled>
					</snapshots>
				</pluginRepository>
			</pluginRepositories>

			<!-- An optional Arquillian testing profile that executes tests in your 
				JBoss AS instance -->
			<!-- This profile will start a new JBoss AS instance, and execute the 
				test, shutting it down when done -->
			<!-- Run with: mvn clean test -Parq-jbossas-managed -->
			<id>arq-jbossas-managed</id>
			<dependencies>
				<dependency>
					<groupId>org.jboss.as</groupId>
					<artifactId>jboss-as-arquillian-container-managed</artifactId>
					<version>7.0.2.Final</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
		</profile>

		<profile>
			<!-- We add the JBoss repository as we need the JBoss AS connectors for 
				Arquillian -->
			<repositories>
				<!-- The JBoss Community public repository is a composite repository 
					of several major repositories -->
				<!-- see http://community.jboss.org/wiki/MavenGettingStarted-Users -->
				<repository>
					<id>jboss-public-repository</id>
					<name>JBoss Repository</name>
					<url>http://repository.jboss.org/nexus/content/groups/public</url>
					<!-- These optional flags are designed to speed up your builds by reducing 
						remote server calls -->
					<releases>
						<enabled>true</enabled>
					</releases>
					<snapshots>
						<enabled>false</enabled>
					</snapshots>
				</repository>
			</repositories>

			<pluginRepositories>
				<pluginRepository>
					<id>jboss-public-repository</id>
					<name>JBoss Repository</name>
					<url>http://repository.jboss.org/nexus/content/groups/public</url>
					<releases>
						<enabled>true</enabled>
					</releases>
					<snapshots>
						<enabled>false</enabled>
					</snapshots>
				</pluginRepository>
			</pluginRepositories>

			<!-- An optional Arquillian testing profile that executes tests in a remote 
				JBoss AS instance -->
			<!-- Run with: mvn clean test -Parq-jbossas-remote -->
			<id>arq-jbossas-remote</id>
			<dependencies>
				<dependency>
					<groupId>org.jboss.as</groupId>
					<artifactId>jboss-as-arquillian-container-remote</artifactId>
					<version>7.0.2.Final</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
		</profile>

	</profiles>
</project>